package com.example.estate.service;

import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.UUID;

import org.apache.tomcat.util.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.example.estate.entity.Product;
import com.example.estate.repository.ProductRepository;

@Service
public class ProductService {

	@Value("${upload.path}")
    private String uploadPath;
	
	@Autowired
	private ProductRepository productRepository;

	@Transactional
	public void saveProduct(MultipartFile productImage, String productName, String infomation, int productPrice) {
        try {
            // Base64 인코딩
            byte[] imageBytes = Base64.encodeBase64(productImage.getBytes());
            String base64Image = new String(imageBytes, "UTF-8");

            // Product 엔터티에 저장
            Product product = new Product();
            product.setProductImage(base64Image);
            product.setProductName(productName);
            product.setInfomation(infomation);
            product.setProductPrice(productPrice);

            productRepository.save(product);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

	public Product getProductByCode(Long productCode) {
        return productRepository.findByProductCode(productCode);
    }
	
	@Transactional(readOnly = true)
	public List<Product> getAllProducts() {
		return productRepository.findAll();
	}

}
