package com.example.estate.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.estate.entity.Product;
import com.example.estate.repository.ProductRepository;

@Service
public class ProductService {

	@Value("${upload.path}")
	private String uploadPath;

	@Autowired
	private ProductRepository productRepository;

	@Transactional
	public void saveProduct(byte[] productImage, String productName, String infomation, int productPrice) {
		try {
			Product product = new Product();
			product.setProductName(productName);
			product.setInfomation(infomation);
			product.setProductPrice(productPrice);

			// Product 엔터티에 이미지 파일 저장
			product.setProductImage(productImage);

			// Product 엔터티를 저장
			productRepository.save(product);
		} catch (Exception e) {
			// 예외 처리
			e.printStackTrace();
			throw new RuntimeException("Failed to save product with image");
		}
	}

	@Transactional(readOnly = true)
	public byte[] getProductImage(Long productCode) {
		try {
			Product product = productRepository.findByProductCode(productCode);
			if (product != null) {
				return product.getProductImage();
			}
			return null; // 해당하는 제품이 없는 경우 null 반환
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException("Failed to get product image");
		}
	}

	@Transactional(readOnly = true)
	public List<Product> getAllProducts() {
		return productRepository.findAll();
	}

	@Transactional(readOnly = true)
    public List<Product> getRecentlyViewedProducts(HttpServletRequest request) {
        List<Product> recentlyViewedProducts = new ArrayList<>();
        // 여기에서 세션 또는 쿠키 등을 활용하여 최근 본 상품 정보를 가져와서 리스트에 추가하는 로직을 작성하세요.
        // 예시로 최근 5개의 상품을 가져오도록 했습니다.
        List<Product> allProducts = getAllProducts();
        int maxRecentlyViewed = 5;

        // 실제로는 세션 또는 쿠키에서 최근 본 상품 정보를 가져와서 recentlyViewedProducts에 추가해야 합니다.
        // 여기에서는 모든 상품 중 최근 5개를 가져오는 예시입니다.
        int size = Math.min(maxRecentlyViewed, allProducts.size());
        for (int i = 0; i < size; i++) {
            recentlyViewedProducts.add(allProducts.get(i));
        }

        return recentlyViewedProducts;
    }
	
}
